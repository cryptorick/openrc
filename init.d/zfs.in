#!/sbin/openrc-run
# Copyright 1999-2011 Gentoo Foundation
# Released under the 2-clause BSD license.
# $Header: /var/cvsroot/gentoo-x86/sys-fs/zfs/files/zfs,v 0.9 2011/04/30 10:13:43 devsk Exp $

depend()
{
        if $(mount -dv / | grep -q zfs)
        then
               before localmount
        else
               after localmount
        fi

	before bootmisc logger
	keyword -jail -prefix
}

ZFS="/sbin/zfs"
ZPOOL="/sbin/zpool"
ZPOOL_CACHE="/boot/zfs/zpool.cache"
ZFS_MODULE=zfs

checksystem() {
	if [ ! -c /dev/zfs ]; then
		einfo "Checking if ZFS modules present"
		if [ ! -x /boot/kernel/zfs.ko ]; then
			eerror "$ZFS_MODULE not found. Is the kernel built with ZFS support"
			return 1
		fi
	fi
	einfo "Checking if zfs userspace tools present"
		if [ ! -x $ZPOOL ]; then
			eerror "$ZPOOL binary not found."
			return 1
		fi
		if [ ! -x $ZFS ]; then
			eerror "$ZFS binary not found."
			return 1
		fi
	return 0
}

start() {
	ebegin "Starting ZFS"
	checksystem || return 1

	if [ ! -c /dev/zfs ]; then
		kldload $ZFS_MODULE
		rv=$?
		if [ $rv -ne 0 ]; then
			eerror "Failed to load the $ZFS_MODULE module, check 'dmesg|tail'."
			eend $rv
			return $rv
		fi
	fi

	# Import all pools described by the cache file, and then mount
	# all filesystem based on their properties.
	if [ -f $ZPOOL_CACHE ]; then
		einfo "Importing ZFS pools"
		# as per fedora script, import can fail if all pools are already imported
		# The check for $rv makes no sense...but someday, it will work right.
		$ZPOOL import -c $ZPOOL_CACHE -aN 2>/dev/null || true
		rv=$?
		if [ $rv -ne 0 ]; then
			eerror "Failed to import not-yet imported pools."
			eend $rv
			return $rv
		fi
	fi

	einfo "Mounting ZFS filesystems"
	$ZFS mount -a
	rv=$?
	if [ $rv -ne 0 ]; then
		eerror "Failed to mount ZFS filesystems."
		eend $rv
		return $rv
	fi

	einfo "Exporting ZFS filesystems"
	$ZFS share -a
	rv=$?
	if [ $rv -ne 0 ]; then
		eerror "Failed to export ZFS filesystems."
		eend $rv
		return $rv
	fi

	eend 0
	return 0
}

stop()
{	
	ebegin "Unsharing ZFS filesystems"
	$ZFS unshare -a
	ebegin "Umounting ZFS filesystem"
	$ZFS umount -a
	rv=$?
	if [ $rv -ne 0 ]; then
		einfo "Some ZFS filesystems not unmounted"
	fi

	# Don't fail if we couldn't umount everything.  /usr might be in use.
	eend 0
	return 0
}

status()
{
	# show pool status and list
	$ZPOOL status && echo && $ZPOOL list
}
